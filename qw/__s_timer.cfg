// tp_ Timer
////////////////////////////////////////////////////////////////////////////////////////////////////
set _.t.time.d1 0
set _.t.time.d2 0
set _.t.time.u1 0
set _.t.time.u2 0
set _.t.late 0
set _.t.early 0

set_tp _.str.earlate ""
set_tp _.str.time1 ""
set_tp _.str.time2 ""

alias _.t.clamp "if ($%1 >= 60) then set %1 0 else if ($%1 < 0) then set %1 59"


alias _.t.strfix "set_tp _.str.time1 $qt$qt; set_tp _.str.time2 $qt$qt; if ($_.t.time1 < 10) then set_tp _.str.time1 0$_.t.time1 else set_tp _.str.time1 $_.t.time1; if ($_.t.time2 < 10) then set_tp _.str.time2 0$_.t.time2 else set_tp _.str.time2 $_.t.time2; _.t.strlate"
alias _.t.strlate "set_tp _.str.timer $qt$qt; if ($_.t.late == 0 AND $_.t.early == 0) then set_tp _.str.timer $tp_name_ontime else if ($_.t.late <= $_.t.early) then set_tp _.str.timer $_.t.late$x20$tp_name_late else set_tp _.str.timer $_.t.early$x20$tp_name_early"



set_tp tp_name_late "late"
set_tp tp_name_early "early"
set_tp tp_name_ontime "on$x20time"

set _.t.quad 55 // quad
set _.t.quad.time 60
set _.t.rl 55 // rl
set _.t.rl.time 30
set _.t.n "rl"

alias _.t.stoi "if ($%1 =~ '^([0]{0,1})([0-9]{1,2})$') then set %2 $re_trigger_match_2 else set %2 $%1"
alias _.t.itos "if (%1 < 10) then set %2 0%1 else set %2 %1"

alias _.t.activate "set _.t.n %1; _.t.kp.set $_.t.%1"
alias _.t.set "set tmp %2; _.t.clamp tmp; set _.t.%1 $tmp; _.t.time.calc $_.t.%1; _.t.echo %1"
alias _.t.setn "_.t.set $_.t.n %1"
alias _.t.set.from.kp "set_calc tmp $_.t.kp1 * 10; set_calc tmp $tmp + $_.t.kp2; _.t.setn $tmp"
alias _.t.reset "set _.t.%1 0"
alias _.t.up "inc _.t.%1 1; _.t.clamp _.t.%1; _.t.echo %1"
alias _.t.down "inc _.t.%1 -1; _.t.clamp _.t.%1; _.t.echo %1"

alias _.t.time.calc "_.t.time.up %1; _.t.time.down %1; _.t.earlate $_.t.n; echo $_.t.time.u1/$_.t.time.d1 late:$_.t.late,early:$_.t.early"
alias _.t.time.up "if (%1 == 0) then set _.t.time.u1 0 else if ($hud_gameclock_countdown == 0) then set _.t.time.u1 %1 else set_calc _.t.time.u1 60 - %1"
alias _.t.time.down "if (%1 == 0) then set _.t.time.d1 0 else if ($hud_gameclock_countdown > 0) then set _.t.time.d1 %1 else set_calc _.t.time.d1 60 - %1"

alias _.t.earlate "set_calc _.t.late $_.t.time.u1 % $_.t.%1.time; set_calc _.t.early $_.t.time.d1 % $_.t.%1.time"
alias _.t.echo "set tmpecho $qt$qt; _.t.itos $_.t.%1 tmpecho; echo T $tp_name_%1: $tmpecho"

// Keypad controls
////////////////////////////////////////////////////////////////////////////////////////////////////
set _.t.kp1 0
set _.t.kp2 0
alias _.t.kp.set "set_calc tmp2 %1 % 10; set_calc tmp1 %1 - $tmp2; set_calc tmp1 $tmp1 / 10; _.t.kp.setb $tmp1 $tmp2"
alias _.t.kp.setb "set _.t.kp1 %1; set _.t.kp2 %2; if ('%2' == '?') then _.t.kp.echo $_.t.n; if ('%2' == '?') then _.t.kp.bind2 else _.t.kp.final"
alias _.t.kp.bind1 "bind kp_0 _.t.kp.setb 0 ?; bind kp_1 _.t.kp.setb 1 ?; bind kp_2 _.t.kp.setb 2 ?; bind kp_3 _.t.kp.setb 3 ?; bind kp_4 _.t.kp.setb 4 ?; bind kp_5 _.t.kp.setb 5 ?; bind kp_6 _.t.kp.setb 0 6; bind kp_7 _.t.kp.setb 0 7; bind kp_8 _.t.kp.setb 0 8; bind kp_9 _.t.kp.setb 0 9"
alias _.t.kp.bind2 "bind kp_0 _.t.kp.setb $_.t.kp1 0; bind kp_1 _.t.kp.setb $_.t.kp1 1; bind kp_2 _.t.kp.setb $_.t.kp1 2; bind kp_3 _.t.kp.setb $_.t.kp1 3; bind kp_4 _.t.kp.setb $_.t.kp1 4; bind kp_5 _.t.kp.setb $_.t.kp1 5; bind kp_6 _.t.kp.setb $_.t.kp1 6; bind kp_7 _.t.kp.setb $_.t.kp1 7; bind kp_8 _.t.kp.setb $_.t.kp1 8; bind kp_9 _.t.kp.setb $_.t.kp1 9"
alias _.t.kp.final "if ('$_.t.kp2' == '?') then _.t.kp.fixqm; _.t.set.from.kp; _.t.kp.bind1"
alias _.t.kp.enter "_.t.kp.final;"
alias _.t.kp.fixqm "set _.t.kp2 $_.t.kp1; set _.t.kp1 0"
alias _.t.kp.echo "echo K $tp_name_%1: $_.t.kp1$_.t.kp2"



bind kp_enter "_.t.kp.enter"
bind mwheelup "_.t.up $_.t.n"
bind mwheeldown "_.t.down $_.t.n"
bind mouse5 "_.t.activate rl"
bind mouse4 "_.t.activate quad"

_.t.reset rl
_.t.reset quad
_.t.kp.bind1
