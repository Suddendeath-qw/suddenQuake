// tp_ Timer
////////////////////////////////////////////////////////////////////////////////////////////////////
set _.t.time1 0
set _.t.time2 0
set _.t.late 0
set _.t.early 0
set_tp _.str.timer ""
set_tp _.str.time1 ""
set_tp _.str.time2 ""

alias _.t.clamp "if ($%1 >= 60) then set %1 0 else if ($%1 < 0) then set %1 59"
alias _.t.strfix "set_tp _.str.time1 $qt$qt; set_tp _.str.time2 $qt$qt; if ($_.t.time1 < 10) then set_tp _.str.time1 0$_.t.time1 else set_tp _.str.time1 $_.t.time1; if ($_.t.time2 < 10) then set_tp _.str.time2 0$_.t.time2 else set_tp _.str.time2 $_.t.time2; _.t.strlate"
alias _.t.strlate "set_tp _.str.timer $qt$qt; if ($_.t.late == 0 AND $_.t.early == 0) then set_tp _.str.timer $tp_name_ontime else if ($_.t.late <= $_.t.early) then set_tp _.str.timer $_.t.late$x20$tp_name_late else set_tp _.str.timer $_.t.early$x20$tp_name_early"

set_tp tp_name_late "late"
set_tp tp_name_early "early"
set_tp tp_name_ontime "on$x20time"



set _.t.quad 55 // quad
set _.t.rl 55 // rl
set _.t.n "rl"



// RL TIMER
set _.tm.rl 0
alias _.tm.rl.up "inc _.tm.rl 1; _.t.clamp _.tm.rl; wait; _.tm.rl.time; _.tm.rl.echo"
alias _.tm.rl.down "inc _.tm.rl -1; _.t.clamp _.tm.rl; wait; _.tm.rl.time; _.tm.rl.echo"
alias _.tm.rl.echo "_.t.strfix; wait; echo $tp_name_rl: $[$_.tm.rl$] &c999$_.str.timer"
alias _.tm.rl.time "if ($hud_gameclock_countdown > 0) then _.tm.rl.time.down $_.tm.rl else _.tm.rl.time.up $_.tm.rl"
alias _.tm.rl.time.down "set _.t.time2 %1; if (%1 == 0) then set _.t.time1 0 else set_calc _.t.time1 60 - %1; _.tm.rl.earlylate $_.t.time2"
alias _.tm.rl.time.up "set _.t.time1 %1; if (%1 == 0) then set _.t.time2 0 else set_calc _.t.time2 60 - %1; _.tm.rl.earlylate $_.t.time1"
alias _.tm.rl.earlylate "if (%1 == 0) then set _.t.late 0 else if (%1 > 30) then set_calc _.t.late 60 - %1 else set_calc _.t.late 30 - %1; if (%1 >= 30) then set_calc _.t.early %1 - 30 else set _.t.early %1"

alias _.tm.rocket "_.tm.rl.time; wait; _.t.strfix"
alias .tsay.timer.rl "say_team $\  $tp_name_rl {&cfffis&r} $_.str.timer"
alias stp_time_rl "_.tm.rocket; wait; .tsay.timer.rl"

alias toggle_stp_rl "bind mwheelup _.tm.rl.up; bind mwheeldown _.tm.rl.down; bind mouse4 stp_time_rl; _.tm.rl.time; wait; _.tm.rl.echo; bind mouse5 toggle_stp_quad"
alias toggle_stp_quad "bind mwheelup _.tm.q.up; bind mwheeldown _.tm.q.down; bind mouse4 stp_time_q; _.tm.q.time; wait; _.tm.q.echo; bind mouse5 toggle_stp_rl"

// QUAD TIMER
set _.tm.q 0
alias _.tm.q.up "inc _.tm.q 1; _.t.clamp _.tm.q; wait; _.tm.q.time; _.tm.q.echo"
alias _.tm.q.down "inc _.tm.q -1; _.t.clamp _.tm.q; wait; _.tm.q.time; _.tm.q.echo"
alias _.tm.q.echo "if ($_.tm.q < 10) then set tmp 0$_.tm.q else set tmp $_.tm.q; echo $tp_name_quad: $tmp &c333(l:$_.t.late e:$_.t.early)"
alias _.tm.q.time "if ($hud_gameclock_countdown > 0) then _.tm.q.time.down else _.tm.q.time.up"
alias _.tm.q.time.down "set _.t.time2 $_.tm.q; if ($_.tm.q == 0) then set _.t.time1 0 else set_calc _.t.time1 60 - $_.tm.q; _.tm.q.earlylate $_.t.time2"
alias _.tm.q.time.up "set _.t.time1 $_.tm.q; if ($_.tm.q == 0) then set _.t.time2 0 else set_calc _.t.time2 60 - $_.tm.q; _.tm.q.earlylate $_.t.time1"
alias _.tm.q.earlylate "if (%1 == 0) then set _.t.late 0 else set_calc _.t.late 60 - %1; set _.t.early %1"

alias _.tm.quad " _.tm.q.time; wait; _.t.strfix"

alias .tsay.timer.quad "say_team $\  $tp_name_quad {&cfffis at $[$_.str.time1/$_.str.time2$]&r} $_.str.timer"
alias stp_time_q "_.tm.quad; wait; .tsay.timer.quad"

bind mwheelup "_.tm.rl.up"
bind mwheeldown "_.tm.rl.down"
bind mouse5 "toggle_stp_quad"
bind mouse4 "stp_time_rl"